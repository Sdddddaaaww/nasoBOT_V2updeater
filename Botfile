counter = 0
async for message in channel.history(limit=200):
    if message.author == client.user:
        counter += 1

messages = [message async for message in channel.history(limit=123)]
# messages is now a list of Message...

class discord.ext.commands.ForumChannelConverter(*args, **kwargs)¶
Methods
convert
Attributes
activity
allowed_mentions
application
application_flags
application_id
cached_messages
emojis
guilds
intents
latency
persistent_views
private_channels
status

@client.event
async def on_ready():
    print('Ready!')


for guild in client.guilds:
    for member in guild.members:
        yield member



@client.event
async def on_message(message):
    if message.content.startswith('$thumb'):
        channel = message.channel
        await channel.send('Send me that 👍 reaction, mate')

        def check(reaction, user):
            return user == message.author and str(reaction.emoji) == '👍'

        try:
            reaction, user = await client.wait_for('reaction_add', timeout=60.0, check=check)
        except asyncio.TimeoutError:
            await channel.send('👎')
        else:
            await channel.send('👍')



game = discord.Game("with the API")
await client.change_presence(status=discord.Status.idle, activity=game)

